{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAmBxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA3BbR,EAAOe,iBAAiB,UAExB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIT,EAAQU,OAAOf,EAAQgB,OAC3B,MAAMC,EAAOF,OAAOd,EAAOe,OACrBE,EAASH,OAAOb,EAASc,OAE/B,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BhB,EAAcgB,EAAI,EAAGd,GAClBe,MAAKb,GAAWZ,EAAA0B,OAAOC,QAAQf,KAC/BgB,OAAMf,GAAUb,EAAA0B,OAAOG,QAAQhB,KAClCH,GAASY,EAEXJ,EAAIY,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay)\n      .then(resolve => Notify.success(resolve))\n      .catch(reject => Notify.failure(reject));\n    delay += step;\n  }\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","Number","value","step","amount","i","then","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.297fe060.js.map"}